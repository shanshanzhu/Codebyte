
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <script src="http://chatbuilder.hackreactor.com/ChatBuilder.js"></script>
    <!--script src = " /home/shanshan/github_test/Chatbuilder/chatbuilder3.js"></script-->
  </head>
  <body>
    <script>
      /*
       *  Nice, you found the HTML source code for ChatBuilder! This document kicks everything off when you load it
       *  in your browser, and is a starting point for the whole app. It's pretty incomplete though--you should
       *  make your own version of it that works better!
       *
       *  You can't edit the code here until it's in a file on your hard drive, so copy this whole page of source
       *  code and paste it into a plain text editor like Sublime Text 2 (http://www.sublimetext.com/). Save it as
       *  a `.html` file, and open that file with Google Chrome. You can now edit it however you like, and refresh
       *  the page to see your modifications take effect on how the application runs.
       *
       *  Fair warning: one or more of the steps ahead could require a good amount of research to understand all
       *  the terms and technologies mentioned. Googling words you haven't heard before is a great idea. Just be
       *  careful not to spend too long in 'research mode' without making any forward progress on your real goal of
       *  completing the app!
       *
       *
       *  When you've got this code saved as a local file, uncomment the line of JavaScript code below and open
       *  the new file in Google Chrome. Your next instructions will be waiting for you in the JavaScript console.
       *  If you already know the Chrome JS development tools pretty well, feel free to skip this opening tutorial
       *  by calling the `.start()` function on `Chat.guide` instead of `.intro()`
       */

      //Chat.guide.intro();

      //Your JavaScript code will go right here!



$(document).ready(function(){
      var clickIsOn = false;
      var t;
      var sentObjID={};
	var gaptime = 3000;
	delete Chat.display;
	delete Chat.fetch; 
	delete Chat.send; 
        $("li").remove();
	
        parseOnce(initialDisplay,10);
	
        getParse();
     
$(".send").on("click",eventHandler);
$(".draft").on ("keyup",function(event){
	if (event.keyCode == 13){
		eventHandler(event);
	}
	else
		checkBox();
	});

function eventHandler (event){
	//event.stopPropagation();
	clickIsOn = true;
	var textContent = Chat.username + ": " + $('.draft').val();
	var obj = {"text": textContent, "username": Chat.username};	
	$('.draft').val('');
	clearTimeout(t);
	//console.log(t);
	//console.log("clean timeoutID");
	sendParse(obj);

};

function sendParse(obj){
	var json = JSON.stringify(obj);
	$.ajax({url:'https://api.parse.com/1/classes/chats',
	   type: 'POST',
	   dataType: 'json',
           contentType:'application/json',
	   processData: false,		
	   data:json,	
	   headers:{"Content-Type": "application/json"},
	   success: function(res){
	        sentObjID[res["objectId"]] = 1;
		//console.log(sentObjID);
                getParse();
		}
	});	
}

function parseOnce(func,gaptime){
	$.ajax({url:'https://api.parse.com/1/classes/chats',
	dataType: 'json',
	contentType:'application/json',
	type: 'GET', 
	data:{"order":"-createdAt"}, 
	error: errorFunc,
        success: function (res){
              	   $.each (res["results"],function(i,item){
			setTimeout(func, i*gaptime,item.text);
           });
	   }
	});
}

function getParse(){

	$.ajax({url:'https://api.parse.com/1/classes/chats',
	   type: 'GET',
	   dataType: 'json',
           contentType:'application/json',
	   data:{"order":"-createdAt"},
           success: function (res){
			if (clickIsOn === true){
				displayRemove(res["results"][0]["text"]);
				clickIsOn = false;
			}				
			else{
		   $.each (res["results"],function(i,item){
			if (item.objectId in sentObjID){
				//i--;
			//	console.log(i);
			}	
			else	
			  setTimeout(displayRemove, i*gaptime,item.text);
           });		
	   }
	   },
	   complete: function (){		

			t = setTimeout(getParse,gaptime*10);
		 //     console.log("restart timoutID");
	   },
	   error: errorFunc
	});
}

function errorFunc (){
	console.log("There is something Wrong!");
}

function displayRemove (response){
		    initialDisplay(response);
		     $('li').first().remove();
}

function initialDisplay (response){
		    $(".messages").append("<li>" + response + "</li>");
}

function checkBox(){
if ($(".draft").val() == "") 
	$('.send').prop({'disabled':true});
if ($(".draft").val() != "") 
	$('.send').prop({'disabled':false});
}

});
    </script>


    <h2>Borken Chat</h2>

    <input class="draft" type="text"/> <button class="send" disabled>send</button>

    <ul class="messages">
      <!-- once you save this code to a local `.html()` file, you can delete these 3 fake, hard-coded li elements -->
         <li>Mysterious_guide: Hey there! Let's build a chat application.</li>
      <li>Mysterious_guide: Right now, there's actually no functionality in this chat client--it's just an inert page full of pre-written HTML that's being rendered by your browser.
      </li><li>Mysterious_guide: But you can fix that--try looking at the page source to see how this page works.</li>
 </ul>

  </body>
</html>

